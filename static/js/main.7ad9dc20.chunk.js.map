{"version":3,"sources":["images/Ajani-Valiant-Protector.jpg","images/Ajani-Mentor-of-Heroes.jpg","images/Ajani-Goldmane.jpg","images/Ashiok-Nightmare-Muse.jpg","images/Ashiok-Nightmare-Weaver.jpg","images/Ashiok-Dream-Render.jpg","images/Chandra-Ablaze.jpg","images/Chandra-Torch-of-Defiance.jpg","images/Chandra-Pyromaster.jpg","images/Garruk-Apex-Predator.jpg","images/Garruk-the-Veil-Cursed.jpg","images/Garruk-Relentless.jpg","images/Jace-Wielder-of-Mysteries.jpg","images/Jace-the-Living-Guildpact.jpg","images/Jace-Beleren.jpg","images/Liliana-Death-Mage.jpg","images/Liliana-the-Necromancer.jpg","images/Liliana-Dreadhorde-General.jpg","components/CardList.js","components/Header.js","App.js","index.js"],"names":["CardList","props","score","checkMemory","difficulty","images","id","src","ashiok1","title","artist","chandra1","garruk1","jace1","liliana1","ajani1","imagesMed","ashiok2","chandra2","garruk2","jace2","liliana2","ajani2","imagesHard","ashiok3","chandra3","garruk3","jace3","liliana3","ajani3","useState","cards","setCards","ez","med","hard","useEffect","newCards","i","length","randomIdx","Math","floor","random","shuffle","className","map","img","onClick","bind","alt","Header","lastScore","hiScore","perfectScore","App","setScore","setLastScore","setHiScore","cardsArr","setCardsArr","setDifficulty","setPerfectScore","resetRound","changeDifficulty","e","x","Number","target","value","removeSelections","classList","add","document","querySelectorAll","forEach","btn","remove","card","includes","console","log","prevArr","addChosenCard","prevScore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ad9dc20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Ajani-Valiant-Protector.3bc3c1b3.jpg\";","export default __webpack_public_path__ + \"static/media/Ajani-Mentor-of-Heroes.5411c40f.jpg\";","export default __webpack_public_path__ + \"static/media/Ajani-Goldmane.a4adb2be.jpg\";","export default __webpack_public_path__ + \"static/media/Ashiok-Nightmare-Muse.93ed0ac5.jpg\";","export default __webpack_public_path__ + \"static/media/Ashiok-Nightmare-Weaver.97cbf5a3.jpg\";","export default __webpack_public_path__ + \"static/media/Ashiok-Dream-Render.d539a604.jpg\";","export default __webpack_public_path__ + \"static/media/Chandra-Ablaze.3b76aeab.jpg\";","export default __webpack_public_path__ + \"static/media/Chandra-Torch-of-Defiance.c747a3cc.jpg\";","export default __webpack_public_path__ + \"static/media/Chandra-Pyromaster.82a1cfde.jpg\";","export default __webpack_public_path__ + \"static/media/Garruk-Apex-Predator.837ec51b.jpg\";","export default __webpack_public_path__ + \"static/media/Garruk-the-Veil-Cursed.94ac16e3.jpg\";","export default __webpack_public_path__ + \"static/media/Garruk-Relentless.8288cd69.jpg\";","export default __webpack_public_path__ + \"static/media/Jace-Wielder-of-Mysteries.6316f896.jpg\";","export default __webpack_public_path__ + \"static/media/Jace-the-Living-Guildpact.31479484.jpg\";","export default __webpack_public_path__ + \"static/media/Jace-Beleren.791dedc4.jpg\";","export default __webpack_public_path__ + \"static/media/Liliana-Death-Mage.66669396.jpg\";","export default __webpack_public_path__ + \"static/media/Liliana-the-Necromancer.503d2584.jpg\";","export default __webpack_public_path__ + \"static/media/Liliana-Dreadhorde-General.bf30253f.jpg\";","import React from 'react'\nimport {useState, useEffect} from 'react';\n\n//doesnt work unless have to import img instead of directly listing as src?\nimport ajani1 from '../images/Ajani-Valiant-Protector.jpg'\nimport ajani2 from '../images/Ajani-Mentor-of-Heroes.jpg'\nimport ajani3 from '../images/Ajani-Goldmane.jpg'\n\nimport ashiok1 from '../images/Ashiok-Nightmare-Muse.jpg'\nimport ashiok2 from '../images/Ashiok-Nightmare-Weaver.jpg'\nimport ashiok3 from '../images/Ashiok-Dream-Render.jpg'\n\nimport chandra1 from '../images/Chandra-Ablaze.jpg'\nimport chandra2 from '../images/Chandra-Torch-of-Defiance.jpg'\nimport chandra3 from '../images/Chandra-Pyromaster.jpg'\n\nimport garruk1 from '../images/Garruk-Apex-Predator.jpg'\nimport garruk2 from '../images/Garruk-the-Veil-Cursed.jpg'\nimport garruk3 from '../images/Garruk-Relentless.jpg'\n\nimport jace1 from '../images/Jace-Wielder-of-Mysteries.jpg'\nimport jace2 from '../images/Jace-the-Living-Guildpact.jpg'\nimport jace3 from '../images/Jace-Beleren.jpg'\n\nimport liliana1 from '../images/Liliana-Death-Mage.jpg'\nimport liliana2 from '../images/Liliana-the-Necromancer.jpg'\nimport liliana3 from '../images/Liliana-Dreadhorde-General.jpg'\n\n\n\n\n// ../images/Ajani-Mentor-of-Heroes.jpg\n// ../images/Ajani-Valiant-Protector.jpg\n// ../images/Ashiok-Nightmare-Muse.jpg\n// ../images/Ashiok-Nightmare-Weaver.jpg\n// ../images/Chandra-Ablaze.jpg\n// ../images/Chandra-Torch-of-Defiance.jpg\n// ../images/Garruk-Apex-Predator.jpg\n// ../images/Garruk-the-Veil-Cursed.jpg\n// ../images/Jace-the-Living-Guildpactjpg\n// ../images/Jace-Wielder-of-Mysteries.jpg\n// ../images/Liliana-Death-Mage.jpg\n// ../images/Liliana-the-Necromancer.jpg\n\n\nconst CardList = (props) => {\n\n    const {score, checkMemory, difficulty} = props\n\n    const images = [\n        {\n            id: 1,\n            src: ashiok1,\n            title: 'Ashiok, Nightmare Muse',\n            artist: 'Raymond Swanland',\n        },\n        {\n            id: 2,\n            src: chandra1,\n            title: 'Chandra Ablaze',\n            artist: 'Steve Argyle',\n        },\n        {\n            id: 3,\n            src: garruk1,\n            title: 'Garruk, Apex Predator',\n            artist: 'Tyler Jacobson',\n        },\n        {\n            id: 4,\n            src: jace1,\n            title: 'Jace, Wielder of Mysteries',\n            artist: 'Anna Steinbauer',\n        },\n        {\n            id: 5,\n            src: liliana1,\n            title: 'Liliana, Death Mage',\n            artist: 'Kieran Yanner',\n        },\n        {\n            id: 6,\n            src: ajani1,\n            title: 'Ajani, Valiant Protector',\n            artist: 'Anna Steinbauer',\n        },\n    ]\n\n    const imagesMed = [\n        {\n            id: 7,\n            src: ashiok2,\n            title: 'Ashiok, Nightmare Weaver',\n            artist: 'Karla Ortiz',\n        },\n        {\n            id: 8,\n            src: chandra2,\n            title: 'Chandra, Torch of Defiance',\n            artist: 'Magali Villeneuve',\n        },\n        {\n            id: 9,\n            src: garruk2,\n            title: 'Garruk, the Veil-Cursed',\n            artist: 'Grzegorz Rutkowski',\n        },\n        {\n            id: 10,\n            src: jace2,\n            title: 'Jace, the Living Guildpact ',\n            artist: 'Chase Stone',\n        },\n        {\n            id: 11,\n            src: liliana2,\n            title: 'Liliana, the Necromancer',\n            artist: 'Livia Prima',\n        },\n        {\n            id: 12,\n            src: ajani2,\n            title: 'Ajani, Mentor of Heroes',\n            artist: 'Aaron Miller',\n        },\n    ]\n\n    const imagesHard = [\n        {\n            id: 13,\n            src: ashiok3,\n            title: 'Ashiok, Dream Render',\n            artist: 'Cynthia Sheppard',\n        },\n        {\n            id: 14,\n            src: chandra3,\n            title: 'Chandra, Pyromaster',\n            artist: 'Winona Nelson',\n        },\n        {\n            id: 15,\n            src: garruk3,\n            title: 'Garruk Relentless',\n            artist: 'Eric Deschamps',\n        },\n        {\n            id: 16,\n            src: jace3,\n            title: 'Jace Beleren',\n            artist: 'Aleksi Briclot',\n        },\n        {\n            id: 17,\n            src: liliana3,\n            title: 'Liliana, Dreadhorde General',\n            artist: 'Chris Rallis',\n        },\n        {\n            id: 18,\n            src: ajani3,\n            title: 'Ajani Goldmane',\n            artist: 'Aleksi Briclot',\n        },\n    ]\n\n    //initializes images as the cards under useeffect\n    const [cards, setCards] = useState([])\n\n    const ez = [...images]\n    const med = [...images, ...imagesMed]\n    const hard = [...images, ...imagesMed, ...imagesHard]\n\n    //randomizes cards on each card click, referencing the score as the change catalyst\n    const shuffle = (newCards) => {\n        for (let i = newCards.length - 1; i > 0; i--) {\n            let randomIdx = Math.floor(Math.random() * i);\n            [newCards[randomIdx], newCards[i]] = [newCards[i], newCards[randomIdx]];\n        }\n    };\n\n    //randomize cards only when score changes, indicating click\n    useEffect(() => {\n        const newCards = [...cards];\n        shuffle(newCards);\n        setCards(newCards);\n    }, [score]);\n\n    //changes cards only when diff changes\n    useEffect(() => {\n        if (difficulty === 1) {\n            setCards(ez)\n        } else if (difficulty === 2) {\n            setCards(med)\n        } else {\n            setCards(hard)\n        }\n\n        return () => {\n            //cleanup\n        }\n    }, [difficulty])\n\n\n\n\n\n    return (\n        <section className='card-container'>\n            \n            {cards.map(img => {\n                return (\n                    <div className={'card' + difficulty} key={img.title} id={img.title}  onClick={checkMemory.bind(this, img.title)}>\n                        <h2>{img.title}</h2>\n                        <img src={img.src} alt={img.title} />\n                        <p className='artist'>Artist: {img.artist}</p>\n                    </div>\n                )\n            })}\n\n        </section>\n\n\n    )\n  \n}\n\nexport default CardList","import React from 'react'\n\nconst Header = (props) => {\n\n    const { score, lastScore, hiScore, perfectScore} = props\n\n    return (\n        <section className='header'>\n            <h1>Magic Memory Game </h1>\n            <div className='scoreboard'>\n                <p className='instructions'>Get points for choosing a card, but don't click on the same card more than once! Cards randomize afer each click</p>\n            \n                <div className='personal-score'>\n                    <p>Current Streak: {score}</p>\n                    <p>Last Streak: {lastScore}</p>\n                    <p>High Score: {hiScore}</p>\n                </div>\n                \n                <p className='perfect-score'>Perfect score for this difficulty: {perfectScore} </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Header\n","import './App.css';\nimport CardList from './components/CardList';\nimport Header from './components/Header';\nimport {useState, useEffect} from 'react';\n\nconst App = () => {\n\n  const [score, setScore] = useState(0)\n  const [lastScore, setLastScore] = useState(0)\n  const [hiScore, setHiScore] = useState(0)\n  const [cardsArr, setCardsArr] = useState([])\n  const [difficulty, setDifficulty] = useState(1)\n  const [perfectScore, setPerfectScore] = useState(6)\n\n  const resetRound = () => {\n    setScore(0)\n    setCardsArr([])\n  }\n\n  const resetAll = () => {\n    setScore(0)\n    setCardsArr([])\n    setHiScore(0)\n    setLastScore(0)\n  }\n\n  const scoreUp = () => {\n    console.log(score)\n    setScore((prevScore) => prevScore + 1)\n  }\n\n  const handleLastScore = () => {\n    setLastScore(score)\n  }\n\n  const handleHiScore = () => {\n    score > hiScore ? setHiScore(score) : resetRound()\n  }\n\n  const handlePerfectScore = () => {\n    difficulty == 1 ? setPerfectScore(6) : \n    difficulty == 2 ? setPerfectScore(12) :\n    setPerfectScore(18)\n  }\n\n  const addChosenCard = (card) => {\n    setCardsArr(prevArr => [...prevArr, card])\n  }\n\n  const checkMemory = (card) => {\n    if(!cardsArr.includes(card)) {\n      console.log('keep going')\n      addChosenCard(card)\n      scoreUp()\n    } else {\n      console.log('lose')\n      handleLastScore()\n      handleHiScore()\n      resetRound()\n    }\n  }\n\n  const changeDifficulty = (e) => {\n    let x = Number(e.target.value)\n    setDifficulty(x)\n    removeSelections()\n    e.target.classList.add('selected')\n  }\n\n  const removeSelections = () => {\n    const btns = document.querySelectorAll('.btn');\n    btns.forEach(btn => {\n      btn.classList.remove('selected')\n    })\n  }\n\n  useEffect(() => {\n    handlePerfectScore()\n    resetAll()\n  }, [difficulty])\n  \n\n  return (\n    <div className=\"App\">\n      <Header score={score} lastScore={lastScore} hiScore={hiScore} perfectScore={perfectScore} />\n     \n      <div className='difficulty-container'>\n        <button className='btn selected' value='1' onClick={changeDifficulty.bind(this)}>Easy</button>\n        <button className='btn' value='2' onClick={changeDifficulty.bind(this)}>Medium</button>\n        <button className='btn' value='3' onClick={changeDifficulty.bind(this)}>Hard</button>\n        <button className='btn extreme' value='4' onClick={changeDifficulty.bind(this)}>Extreme</button>\n      </div>\n     \n      <CardList score={score} checkMemory={checkMemory} difficulty={difficulty} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}